labs(
title = "LF/HF Ratio by Animation with Error Bars",
x = "Animation",
y = "Mean LF/HF Ratio"
) +
scale_x_discrete(labels = abbreviate) +  # Abbreviate the labels
scale_y_continuous(expand = c(0, 0), limits = c(0, 4)) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 13, face = "bold")
)
View(subject.mean)
####################
## recheck data JP
# anova for data rating
data.rating <- read.csv("MergeJP_all_data.csv")
# change column names
colnames(data.rating) <- c("Rating","Animation","HRV_LFHF_mean",
"HRV_LFHF_std","id","Avatar")
## mean , sd of each avatar
data.rating %>%
group_by(id,Avatar) %>%
summarise(Rating = mean(Rating)) %>%
group_by(Avatar) %>%
summarise(mean_Rating = mean(Rating),
sd_Rating = sd(Rating))
View(data.rating)
data.rating <- read.csv("MergeJP_all_data.csv")
# change column names
colnames(data.rating) <- c("Rating","Animation","HRV_LFHF_mean",
"HRV_LFHF_std","id","Avatar")
## mean , sd of each avatar
data.rating %>%
group_by(id,Avatar) %>%
summarise(Rating = mean(Rating)) %>%
group_by(Avatar) %>%
summarise(mean_Rating = mean(Rating),
sd_Rating = sd(Rating))
## mean , sd of each animation
data.rating %>%
group_by(id,Animation) %>%
summarise(Rating = mean(Rating)) %>%
group_by(Animation) %>%
summarise(mean_Rating = mean(Rating),
sd_Rating = sd(Rating))
# anova for data rating
data.rating <- read.csv("rating-data.csv")
data.q1 <- read.csv("rating_q1.csv") %>%
mutate(Avatar = tolower(Avatar))
data.q1rating <- data.q1 %>% select(-HRV_LFHF_mean)
data.rating <- rbind(data.rating,data.q1rating)
## mean , sd of each avatar
data.rating %>%
group_by(id,Avatar) %>%
summarise(Rating = mean(Rating)) %>%
group_by(Avatar) %>%
summarise(mean_Rating = mean(Rating),
sd_Rating = sd(Rating))
View(data.rating)
# anova for data rating
data.rating_2 <- read.csv("rating-data.csv")
View(data.rating)
View(data.rating_2)
data.rating_2 <- read.csv("MergeJP_all_data.csv")
View(data.rating)
View(data.rating)
View(data.rating_2)
# change column names
colnames(data.rating_2) <- c("Rating_2","Animation","HRV_LFHF_mean",
"HRV_LFHF_std","id","Avatar")
left_join_data <- left_join(data.rating,data.rating_2, by = c("id","Avatar","Animation"))
View(left_join_data)
distinct(data.rating_2$Animation)
as.factor(data.rating_2$Animation)
levels(as.factor(data.rating_2$Animation))
data.rating$Animation[data.rating$Animation == "LeftHandToBody"] <- "LetfHandToBody"
data.rating$Animation[data.rating$Animation == "LeftHandToFace"] <- "LeftHandToFace"
data.rating$Animation[data.rating$Animation == "RightHandToBody"] <- "RightHandToBody"
data.rating$Animation[data.rating$Animation == "RightHandToFace"] <- "RightHandToFace"
data.rating$Animation[data.rating$Animation == "TouchBody"] <- "TouchBody"
data.rating$Animation[data.rating$Animation == "TouchFace"] <- "TouchFace"
left_join_data <- left_join(data.rating,data.rating_2, by = c("id","Avatar","Animation"))
View(left_join_data)
levels(as.factor(data.rating_2$Avatar))
data.rating$Avatar[data.rating$Avatar == "man"] <- "Man"
data.rating$Avatar[data.rating$Avatar == "woman"] <- "Woman"
data.rating$Avatar[data.rating$Avatar == "robot"] <- "Robot"
left_join_data <- left_join(data.rating,data.rating_2, by = c("id","Avatar","Animation"))
which(left_join_data$Rating != left_join_data$Rating_2)
left_join_data[left_join_data$Rating != left_join_data$Rating_2,]
filter_data <- left_join_data[left_join_data$Rating != left_join_data$Rating_2,]
filter %>% arrange(id)
filter %>% arrange(id)
filter_data %>% arrange(id)
library(afex)
library(emmeans)
library(dplyr)
library(tidyr)
# anova for data rating
data.rating <- read.csv("MergeJP_all_data.csv")
# change column names
colnames(data.rating) <- c("Rating","Animation","HRV_LFHF_mean",
"HRV_LFHF_std","id","Avatar")
## mean , sd of each avatar
data.rating %>%
group_by(id,Avatar) %>%
summarise(Rating = mean(Rating)) %>%
group_by(Avatar) %>%
summarise(mean_Rating = mean(Rating),
sd_Rating = sd(Rating))
## mean , sd of each animation
data.rating %>%
group_by(id,Animation) %>%
summarise(Rating = mean(Rating)) %>%
group_by(Animation) %>%
summarise(mean_Rating = mean(Rating),
sd_Rating = sd(Rating))
anova_model <- aov_ez(id = "id", dv = "Rating",
within = c("Animation", "Avatar"),
data = data.rating)
# Display the results
summary(anova_model)
emmeans_model <- emmeans(anova_model, pairwise ~ Avatar, adjust = "tukey")
print(emmeans_model$contrasts)
emmeans_model <- emmeans(anova_model, pairwise ~ Animation, adjust = "tukey")
print(emmeans_model$contrasts)
## LFHF
## mean , sd of each avatar
data.rating %>%
group_by(id,Avatar) %>%
summarise(mean_HRV = mean(HRV_LFHF_mean)) %>%
group_by(Avatar) %>%
summarise(HRV_LFHF_mean = mean(mean_HRV),
sd_LFHF = sd(mean_HRV))
## mean , sd of each animation
data.rating %>%
group_by(id,Animation) %>%
summarise(mean_HRV = mean(HRV_LFHF_mean)) %>%
group_by(Animation) %>%
summarise(mean_Rating = mean(mean_HRV),
sd_Rating = sd(mean_HRV))
anova_model <- aov_ez(id = "id", dv = "HRV_LFHF_mean",
within = c("Animation", "Avatar"),
data = data.rating)
# Display the results
summary(anova_model)
# find correlation
plot(data.rating[,"Rating"],data.rating[,"HRV_LFHF_mean"])
data.rating %>%
group_by(id) %>%
summarise(mean_Rating_rating = mean(Rating),
mean_LFHF = mean(HRV_LFHF_mean)) -> gdata
gdata <- as.data.frame(gdata)
plot(gdata[,"mean_Rating_rating"],gdata[,"mean_LFHF"])
cor.test(gdata[,"mean_Rating_rating"],gdata[,"mean_LFHF"])
# find correlation
data.rating %>%
group_by(id,Avatar) %>%
summarise(mean_Rating_rating = mean(Rating),
mean_LFHF = mean(HRV_LFHF_mean)) -> gdata
gdata <- as.data.frame(gdata)
plot(gdata[,"mean_Rating_rating"],gdata[,"mean_LFHF"])
cor.test(gdata[,"mean_Rating_rating"],gdata[,"mean_LFHF"])
# compute mean and error bar for ploting
data.rating %>%
group_by(id,Avatar) %>%
summarise(mean_Rating_rating = mean(Rating)) -> gdata
gdata <- as.data.frame(gdata)
grand.mean <- mean(gdata[,"mean_Rating_rating"])
data.rating %>%
group_by(id) %>%
summarise(mean_Rating_rating = mean(Rating)) -> subject.mean
subject.mean <- as.data.frame(subject.mean)
gdata %>%
left_join(subject.mean,by= "id") -> newvalue
newvalue <- as.data.frame(newvalue)
newvalue["grand.mean"] <- grand.mean
newvalue["new.rating"] <- newvalue[,"mean_Rating_rating.x"] - newvalue[,"mean_Rating_rating.y"] + newvalue[,"grand.mean"]
# Function to compute standard error
error_bar <- function(x) {
1.96 * (sd(x) / sqrt(length(x)))
}
result <- newvalue %>% group_by(Avatar) %>%
summarise(
mean_avatar = mean(mean_Rating_rating.x),
errbar_avatar = error_bar(new.rating)
)
result <- as.data.frame(result)
# ggplot
library(ggplot2)
ggplot(result) +
geom_bar(aes(x=Avatar, y=mean_avatar), stat='identity') +
geom_errorbar(aes(x=Avatar, ymin=mean_avatar-errbar_avatar, ymax=mean_avatar+errbar_avatar), width=0.4)
# Assuming 'result' is your data frame with columns 'Avatar', 'mean_avatar', and 'errbar_avatar'
ggplot(result, aes(x = Avatar, y = mean_avatar)) +
geom_bar(stat = 'identity', fill = "skyblue", color = "black", width = 0.6) +  # Customize bar color and width
geom_errorbar(aes(ymin = mean_avatar - errbar_avatar, ymax = mean_avatar + errbar_avatar),
width = 0.2, color = "black") +  # Customize error bars
labs(
title = "Discomfort Ratings by Avatar with Error Bars",
x = "Avatar",
y = "Mean Rating Score"
) +  # Add title and axis labels
scale_y_continuous(limits = c(0, 4), expand = c(0, 0)) +  # Set y-axis range and remove extra space
scale_x_discrete(labels = function(x) { tools::toTitleCase(tolower(x)) }) +  # Capitalize only the first letter of each label
theme_minimal() +  # Use a clean theme
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Center and style title
axis.text = element_text(size = 12),  # Adjust axis text size
axis.title = element_text(size = 13, face = "bold")  # Adjust axis title size
)
##----------------------
## LFHF score
## find new value to compute new error bar
data.rating %>%
group_by(id,Avatar) %>%
summarise(mean_LFHF = mean(HRV_LFHF_mean)) -> gdata
gdata <- as.data.frame(gdata)
grand.mean <- mean(gdata[,"mean_LFHF"])
data.rating %>%
group_by(id) %>%
summarise(mean_lfhf = mean(HRV_LFHF_mean)) -> subject.mean
subject.mean <- as.data.frame(subject.mean)
gdata %>%
left_join(subject.mean,by= "id") -> newvalue
newvalue <- as.data.frame(newvalue)
newvalue["grand.mean"] <- grand.mean
newvalue["new.lfhf"] <- newvalue[,"mean_LFHF"] - newvalue[,"mean_lfhf"] + newvalue[,"grand.mean"]
# Function to compute standard error
error_bar <- function(x) {
1.96 * (sd(x) / sqrt(length(x)))
}
result <- newvalue %>% group_by(Avatar) %>%
summarise(
mean_avatar = mean(mean_LFHF),
errbar_avatar = error_bar(new.lfhf)
)
result <- as.data.frame(result)
# ggplot
library(ggplot2)
ggplot(result) +
geom_bar(aes(x=Avatar, y=mean_avatar), stat='identity') +
geom_errorbar(aes(x=Avatar, ymin=mean_avatar-errbar_avatar, ymax=mean_avatar+errbar_avatar), width=0.4)
# Assuming 'result' is your data frame with columns 'Avatar', 'mean_avatar', and 'errbar_avatar'
ggplot(result, aes(x = Avatar, y = mean_avatar)) +
geom_bar(stat = 'identity', fill = "skyblue", color = "black", width = 0.6) +  # Customize bar color and width
geom_errorbar(aes(ymin = mean_avatar - errbar_avatar, ymax = mean_avatar + errbar_avatar),
width = 0.2, color = "black") +  # Customize error bars
labs(
title = "LF/HF Ratio by Avatar with Error Bars",
x = "Avatar",
y = "Mean LF/HF Ratio"
) +  # Add title and axis labels
scale_y_continuous(limits = c(0, 4), expand = c(0, 0)) +  # Set y-axis range and remove extra space
scale_x_discrete(labels = function(x) { tools::toTitleCase(tolower(x)) }) +  # Capitalize only the first letter of each label
theme_minimal() +  # Use a clean theme
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Center and style title
axis.text = element_text(size = 12),  # Adjust axis text size
axis.title = element_text(size = 13, face = "bold")  # Adjust axis title size
)
data.rating %>%
group_by(id,Animation) %>%
summarise(mean_Rating_rating = mean(Rating)) -> gdata
gdata <- as.data.frame(gdata)
grand.mean <- mean(gdata[,"mean_Rating_rating"])
data.rating %>%
group_by(id) %>%
summarise(mean_Rating_rating = mean(Rating)) -> subject.mean
subject.mean <- as.data.frame(subject.mean)
gdata %>%
left_join(subject.mean,by= "id") -> newvalue
newvalue <- as.data.frame(newvalue)
newvalue["grand.mean"] <- grand.mean
newvalue["new.rating"] <- newvalue[,"mean_Rating_rating.x"] - newvalue[,"mean_Rating_rating.y"] + newvalue[,"grand.mean"]
# Function to compute standard error
error_bar <- function(x) {
1.96 * (sd(x) / sqrt(length(x)))
}
result <- newvalue %>% group_by(Animation) %>%
summarise(
mean_animation = mean(mean_Rating_rating.x),
errbar_animation = error_bar(new.rating)
)
result <- as.data.frame(result)
# ggplot
library(ggplot2)
result$Animation[result$Animation == "LeftHandToBody"] <- "LeftHandBOdy"
result$Animation[result$Animation == "LeftHandToFace"] <- "LeftHandFAce"
result$Animation[result$Animation == "RightHandToBody"] <- "RightHandBOdy"
result$Animation[result$Animation == "RightHandToFace"] <- "RightHandFAce"
result$Animation[result$Animation == "TouchBody"] <- "BothHandBOdy"
result$Animation[result$Animation == "TouchFace"] <- "BothHandFAce"
result$Animation <- factor(result$Animation,levels = c("Walk","LeftHandBOdy","RightHandBOdy","BothHandBOdy",
"LeftHandFAce","RightHandFAce","BothHandFAce"))
# Wrap long labels to fit better
ggplot(result, aes(x = Animation, y = mean_animation)) +
geom_bar(stat = 'identity', fill = "skyblue", color = "black", width = 0.6) +
geom_errorbar(aes(ymin = mean_animation - errbar_animation, ymax = mean_animation + errbar_animation),
width = 0.3, color = "black", size = 0.7) +
labs(
title = "Discomfort Ratings by Animation with Error Bars",
x = "Animation",
y = "Mean Rating Score"
) +
scale_x_discrete(labels = abbreviate) +  # Abbreviate the labels
scale_y_continuous(expand = c(0, 0), limits = c(0, 4)) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 13, face = "bold")
)
data.rating %>%
group_by(id,Animation) %>%
summarise(mean_LFHF = mean(HRV_LFHF_mean)) -> gdata
gdata <- as.data.frame(gdata)
grand.mean <- mean(gdata[,"mean_LFHF"])
data.rating %>%
group_by(id) %>%
summarise(mean_lfhf = mean(HRV_LFHF_mean)) -> subject.mean
subject.mean <- as.data.frame(subject.mean)
gdata %>%
left_join(subject.mean,by= "id") -> newvalue
newvalue <- as.data.frame(newvalue)
newvalue["grand.mean"] <- grand.mean
newvalue["new.lfhf"] <- newvalue[,"mean_LFHF"] - newvalue[,"mean_lfhf"] + newvalue[,"grand.mean"]
# Function to compute standard error
error_bar <- function(x) {
1.96 * (sd(x) / sqrt(length(x)))
}
result <- newvalue %>% group_by(Animation) %>%
summarise(
mean_Animation = mean(mean_LFHF),
errbar_Animation = error_bar(new.lfhf)
)
result <- as.data.frame(result)
# ggplot
library(ggplot2)
result$Animation[result$Animation == "LeftHandToBody"] <- "LeftHandBOdy"
result$Animation[result$Animation == "LeftHandToFace"] <- "LeftHandFAce"
result$Animation[result$Animation == "RightHandToBody"] <- "RightHandBOdy"
result$Animation[result$Animation == "RightHandToFace"] <- "RightHandFAce"
result$Animation[result$Animation == "TouchBody"] <- "BothHandBOdy"
result$Animation[result$Animation == "TouchFace"] <- "BothHandFAce"
result$Animation <- factor(result$Animation,levels = c("Walk","LeftHandBOdy","RightHandBOdy","BothHandBOdy",
"LeftHandFAce","RightHandFAce","BothHandFAce"))
# Wrap long labels to fit better
ggplot(result, aes(x = Animation, y = mean_Animation)) +
geom_bar(stat = 'identity', fill = "skyblue", color = "black", width = 0.6) +
geom_errorbar(aes(ymin = mean_Animation - errbar_Animation, ymax = mean_Animation + errbar_Animation),
width = 0.3, color = "black", size = 0.7) +
labs(
title = "LF/HF Ratio by Animation with Error Bars",
x = "Animation",
y = "Mean LF/HF Ratio"
) +
scale_x_discrete(labels = abbreviate) +  # Abbreviate the labels
scale_y_continuous(expand = c(0, 0), limits = c(0, 4)) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 13, face = "bold")
)
library(afex)
library(emmeans)
library(dplyr)
library(tidyr)
# There is a mistake, so we need to debug it!!
### มีค่า mean ของ rating man and women ไม่ตรงกัน
data.rating <- read.csv("rating-data.csv")
# There is a mistake, so we need to debug it!!
### มีค่า mean ของ rating man and women ไม่ตรงกัน
data.rating <- read.csv("rating-data_ไม่เอา.csv")
data.q1 <- read.csv("rating_q1.csv") %>%
mutate(Avatar = tolower(Avatar))
data.q1rating <- data.q1 %>% select(-HRV_LFHF_mean)
data.rating <- rbind(data.rating,data.q1rating)
data.rating_2 <- read.csv("MergeJP_all_data.csv")
# change column names
colnames(data.rating_2) <- c("Rating_2","Animation","HRV_LFHF_mean",
"HRV_LFHF_std","id","Avatar")
data.rating$Animation[data.rating$Animation == "LeftHandToBody"] <- "LetfHandToBody"
data.rating$Animation[data.rating$Animation == "LeftHandToFace"] <- "LeftHandToFace"
data.rating$Animation[data.rating$Animation == "RightHandToBody"] <- "RightHandToBody"
data.rating$Animation[data.rating$Animation == "RightHandToFace"] <- "RightHandToFace"
data.rating$Animation[data.rating$Animation == "TouchBody"] <- "TouchBody"
data.rating$Animation[data.rating$Animation == "TouchFace"] <- "TouchFace"
data.rating$Avatar[data.rating$Avatar == "man"] <- "Man"
data.rating$Avatar[data.rating$Avatar == "woman"] <- "Woman"
data.rating$Avatar[data.rating$Avatar == "robot"] <- "Robot"
left_join_data <- left_join(data.rating,data.rating_2, by = c("id","Avatar","Animation"))
filter_data <- left_join_data[left_join_data$Rating != left_join_data$Rating_2,]
filter_data %>% arrange(id)
write.csv(filter_data,file="not_match_data.csv")
filter_data <- filter_data %>% arrange(id)
write.csv(filter_data,file="not_match_data.csv")
data.jp <- read.csv("MergeJP_all_data.csv")
data.th <- read.csv("MergeTh_all_data.csv")
# change column names
colnames(data.jp) <- c("Rating","Animation","HRV_LFHF_mean",
"HRV_LFHF_std","id","Avatar")
colnames(data.th) <- c("Rating","Animation","HRV_LFHF_mean",
"HRV_LFHF_std","id","Avatar")
View(data.jp)
View(data.th)
data.jp$country <- "JP"
dat.th$country <- "TH"
data.th$country <- "TH"
View(data.jp)
plot(cars)
plot(cars)
#combine data
data.all <- rbind(data.jp,data.th)
View(data.all)
#anova
anova_model <- aov_ez(id = "id", dv = "Rating",
within = c("Animation", "Avatar"),
between = c("country"),
data = data.all)
data.jp$id <- paste("jp",data.jp$id,sep = "-")
View(data.jp)
data.th$id <- paste("th",data.th$id,sep = "-")
#combine data
data.all <- rbind(data.jp,data.th)
#anova
anova_model <- aov_ez(id = "id", dv = "Rating",
within = c("Animation", "Avatar"),
between = c("country"),
data = data.all)
levels(as.factor(data.all$Animation))
data.all$Animation[data.all$Animation == "LetfHandToBody"] <- "LeftHandToBody"
levels(as.factor(data.all$Animation))
#anova
anova_model <- aov_ez(id = "id", dv = "Rating",
within = c("Animation", "Avatar"),
between = c("country"),
data = data.all)
# Display the results
summary(anova_model)
summarized_data <- data.all %>% group_by(country) %>%
summarise(mean.rating = mean(Rating),
se = sd(Rating)/sqrt(n))
summarized_data <- data.all %>% group_by(country) %>%
summarise(mean.rating = mean(Rating),
se = sd(Rating)/sqrt(n()))
View(summarized_data)
# Create bar plot with error bars
ggplot(summarized_data, aes(x = country, y = mean.rating)) +
geom_bar(stat = "identity", fill = "lightblue", color = "black") +
geom_errorbar(aes(ymin = mean.rating - se, ymax = mean.rating + se), width = 0.2) +
labs(title = "Bar Plot with Error Bars", x = "country", y = "Mean Value") +
theme_minimal()
View(summarized_data)
t.test(data.all$Rating[data.all$country == "JP"],data.all$Rating[data.all$country == "TH"])
emmeans_model <- emmeans(anova_model, pairwise ~ country, adjust = "tukey")
print(emmeans_model$contrasts)
# check normality in data
shapiro.test(data.all$Rating)
wilcox.test(data.all$Rating[data.all$country == "JP"],data.all$Rating[data.all$country == "TH"])
# check normality in data
shapiro.test(data.all$Rating[data.all$country == "JP"])
qqnorm(data.all$Rating)
qqline(data.all$Rating,col = 'red')
# homogeneity of variance test
library(car)
levene_test <- leveneTest(Rating ~ country, data = data.all)
print(levene_test)
boxplot(Rating ~ country, data = data.all, main = "Boxplot by Group", xlab = "Group", ylab = "Values")
# group data and conduct wilcox.test
summarized_data <- data.all %>% group_by(id) %>%
summarise(mean.rating = mean(Rating))
View(summarized_data)
# group data and conduct wilcox.test
summarized_data <- data.all %>% group_by(id,country) %>%
summarise(mean.rating = mean(Rating))
View(summarized_data)
wilcox.test(summarized_data$mean.rating[summarized_data$country == "JP"],summarized_data$mean.rating[summarized_data$country == "TH"])
View(summarized_data)
# group data and conduct wilcox.test
summarized_data <- data.all %>% group_by(id) %>%
summarise(mean.rating = mean(Rating))
View(summarized_data)
# group data and conduct wilcox.test
summarized_data <- data.all %>% group_by(id) %>%
summarise(mean.rating = mean(Rating)) %>%
separate(id, into = c("country","number"),sep= '-',remove = FALSE)
View(summarized_data)
wilcox.test(summarized_data$mean.rating[summarized_data$country == "jp"],summarized_data$mean.rating[summarized_data$country == "th"])
table(summarized_data$mean.rating)
View(emmeans_model)
# Within-subjects (Friedman test by group)
data.all %>%
group_by(country) %>%
summarise(Friedman_p_value = friedman.test(Rating ~ Avatar | id)$p.value)
# Within-subjects (Friedman test by group)
data.all %>%
group_by(country) %>%
summarise(Friedman_p_value = friedman.test(Rating ~ (Avatar+Animation) | id)$p.value)
# Within-subjects (Friedman test by group)
data.all %>%
group_by(country,Animation) %>%
summarise(Friedman_p_value = friedman.test(Rating ~ Avatar | id)$p.value)
data.all %>%
group_by(country,Avatar) %>%
summarise(Friedman_p_value = friedman.test(Rating ~ Animation | id)$p.value)
